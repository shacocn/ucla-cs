//////////////
// QUESTION 2
//////////////

first 12 coordinates:
1: (3, 5)
2: (3, 6)
3: (3, 4)
4: (2, 4)
5: (1, 4)
6: (1, 3)
7: (1, 2)
8: (1, 1)
9: (2, 1)
10: (3, 3)
11: (4, 5)
12: (5, 5)

//////////////
// QUESTION 4
//////////////
0: (3, 5)
1: (4, 5)
2: (3, 4)
3: (3, 6)
4: (5, 5)
5: (3, 3)
6: (2, 4)
7: (6, 5)
8: (5, 4)
9: (1, 4)
10: (7, 5)
11: (5, 3)
12: (1, 3)

The two algorithms differ by how they visit each cell in the maze; the stack implementation of the solution travels in a random path and hopes that it makes it to the endpoint. This is because it adds possible positions to the end of the list and revisits the positions that were most recently added. If the current path encounters a dead end, the program backtracks until a new path can be found. This solution can either be very efficient or very slow. On the other hand, the queue implementation of the solution marks viable positions in concentric circles. Although it can be slow, it will ultimately find the fastest solution to the endpoint. The queue implementation uses a first-in first-out approach, so that the first values added will be 