//////////////
// QUESTION 1
//////////////
(a)
50
   20
      10
      40
         30
         xx
   60
      xx
      70
        xx
        80

(b)
in-order:
10 20 30 40 50 60 70 80

pre-order:
50 20 10 40 30 60 70 80

post-order:
10 30 40 20 80 70 60 50

(c)
50
   20
      10
      40
         xx
         xx
   60
      xx
      70
        xx
        80

50
   40
      10
      xx
   60
      xx
      70
        xx
        80

//////////////
// QUESTION 2
//////////////
(a)
struct Node 
{
    int value;
    Node* left;
    Node* right;
    Node* parent;
}

(b)
if tree is empty
    allocate new node, put value into it, and point root to it
starting at root of the tree
while not done
    if value is equal to current node's value, finish
    if value is less than current node's value
        if there is a left child, keep going left
        otherwise, allocate new node and put value into it
            set current node's left pointer to new node
            set new node's parent pointer to current node
    if value is greater than current node's value
        if there is a right child, keep going right
        otherwise, allocate new node and put value into it
            set current node's right pointer to new node
            set new node's parent pointer to current node

//////////////
// QUESTION 3
//////////////
(a)
7
  3
    0
    2
  6
    4
    xx

(b) 7 3 6 0 2 4

(c) 6 3 4 0 2

//////////////
// QUESTION 4
//////////////
(a) O(C + S)
(b) O(logC + S)
(c) O(logC + logS)
(d) O(logS)
(e) O(1)
(f) O(C + S)
(g) O(S)
(h) O(S)
